{"remainingRequest":"/Users/ease/Work/node/vue-sku/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ease/Work/node/vue-sku/src/components/specification/index.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/ease/Work/node/vue-sku/src/components/specification/index.vue","mtime":1565317289495},{"path":"/Users/ease/Work/node/vue-sku/node_modules/css-loader/index.js","mtime":1564277481676},{"path":"/Users/ease/Work/node/vue-sku/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1564277484030},{"path":"/Users/ease/Work/node/vue-sku/node_modules/postcss-loader/src/index.js","mtime":1564277483624},{"path":"/Users/ease/Work/node/vue-sku/node_modules/sass-loader/lib/loader.js","mtime":1564277545934},{"path":"/Users/ease/Work/node/vue-sku/node_modules/cache-loader/dist/cjs.js","mtime":1564277481020},{"path":"/Users/ease/Work/node/vue-sku/node_modules/vue-loader/lib/index.js","mtime":1564277484030}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.standard {\n  width: 100%;\n  box-sizing: border-box;\n  overflow: hidden;\n\n  .el-input__inner {\n    padding: 0 5px;\n  }\n\n  .inline-text {\n    font-size: 12px;\n  }\n\n  .inline-title {\n    width: 50px;\n    height: 28px;\n    line-height: 28px;\n  }\n\n  .inline-input {\n    width: 120px;\n  }\n\n  .standard-input {\n    margin-right: 10px;\n  }\n\n  .standard-panel {\n\n    &:hover {\n      .el-icon-error {\n        margin-right: 0;\n      }\n    }\n  }\n\n  .standard-head {\n    padding: 7px 10px;\n    background-color: #f8f8f8;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n\n    .el-icon-error {\n      margin-right: -50px;\n      cursor: pointer;\n      transition: all .3s;\n    }\n\n    .standard-group {\n      display: flex;\n      flex-flow: row nowrap;\n      align-items: center;\n    }\n\n    .el-checkbox.is-bordered {\n      border: 0;\n    }\n  }\n\n  .standard-lists {\n    padding: 10px 10px 0;\n    display: flex;\n    flex-flow: row wrap;\n    align-items: flex-start;\n    margin-bottom: 10px;\n  }\n\n  .standard-tools {\n    margin-top: 10px;\n    display: flex;\n    flex-flow: row nowrap;\n    align-items: center;\n\n    .inline-text {\n      margin-right: 10px\n    }\n\n    .el-input {\n      margin-left: 10px;\n      width: 150px;\n    }\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8aA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/specification","sourcesContent":["<template>\n  <div class=\"standard\">\n    <div class=\"standard-container\">\n      <div class=\"standard-panel\" v-for=\"(spec, indent) in specification\" :key=\"indent\">\n        <div class=\"standard-head\">\n          <div class=\"standard-group\">\n            <div class=\"inline-text inline-title\">规格名:</div>\n            <el-input v-model=\"spec.name\" @blur=\"handleChangeSpecification('add')\" size=\"mini\" class=\"inline-input\" />\n            <el-checkbox v-if=\"image && indent === 0\" v-model=\"checked\" label=\"规格图片\" border size=\"mini\"></el-checkbox>\n          </div>\n          <i class=\"el-icon-error\" @click=\"handleRemoveSpecification(indent)\"></i>\n        </div>\n        <div class=\"standard-lists\">\n          <div class=\"standard-value inline-text inline-title\">规格值:</div>\n            <div class=\"standard-value standard-input\" v-for=\"(tag, index) in spec.attribute\" :key=\"index\">\n              <el-tag size=\"medium\" closable @close=\"handleRemoveAttribute(indent, index)\">{{ tag }}</el-tag>\n            </div>\n            <div v-if=\"visiableCache[indent]\" class=\"standard-input\" style=\"width: 92px; margin: 0;\">\n              <el-input\n                :ref=\"`input_${indent}`\"\n                v-model=\"attributeModelCache[indent]\"\n                size=\"mini\"\n                @keyup.enter.native=\"handleAddAttribute(indent)\"\n                @blur=\"handleAddAttribute(indent)\"\n              />\n            </div>\n            <el-button v-else size=\"mini\" @click=\"handleToggleInput(indent)\">添加规格值</el-button>\n        </div>\n      </div>\n      <el-tooltip v-if=\"!enable\" :content=\"`最多支持${max}条规格`\" class=\"item\" effect=\"dark\" placement=\"top\">\n        <el-button type=\"info\" class=\"standard-btn\" size=\"mini\" plain>添加规格</el-button>\n      </el-tooltip>\n      <el-button v-else type=\"primary\" class=\"standard-btn\" size=\"mini\" plain @click=\"handlePushSpecification\">添加规格</el-button>\n    </div>\n    <template v-if=\"skus.length\">\n      <el-table style=\"margin-top: 10px\" border :data=\"data\" :span-method=\"handleSpanMethod\">\n        <el-table-column\n          v-for=\"(item, indent) in specification\"\n          :key=\"indent\"\n          :prop=\"item.name\"\n          :label=\"item.name\">\n        </el-table-column>\n        <el-table-column\n          prop=\"price\"\n          label=\"价格\"\n          width=\"120\">\n          <template slot-scope=\"scope\">\n            <el-input size=\"mini\" v-model=\"skus[scope.$index].price\" />\n          </template>\n        </el-table-column>\n        <el-table-column\n          prop=\"marked_price\"\n          label=\"市场价\"\n          width=\"120\">\n          <template slot-scope=\"scope\">\n            <el-input size=\"mini\" v-model=\"skus[scope.$index].marked_price\" />\n          </template>\n        </el-table-column>\n        <el-table-column\n          prop=\"stock\"\n          label=\"库存\"\n          width=\"120\">\n          <template slot-scope=\"scope\">\n            <el-input size=\"mini\" v-model=\"skus[scope.$index].stock\" />\n          </template>\n        </el-table-column>\n      </el-table>\n      <div class=\"standard-tools\">\n        <span class=\"inline-text\">批量设置</span>\n        <el-radio-group v-model=\"mode\" size=\"mini\">\n          <el-radio-button label=\"price\">价格</el-radio-button>\n          <el-radio-button label=\"marked_price\">市场价</el-radio-button>\n          <el-radio-button label=\"stock\">库存</el-radio-button>\n        </el-radio-group>\n        <el-input v-if=\"mode\" v-model=\"value\"><el-button type=\"primary\" slot=\"append\" icon=\"el-icon-setting\" @click=\"handleSettingSkus\"></el-button></el-input>\n      </div>\n    </template>\n    <template v-if=\"test\">\n      <h3>规格</h3>\n      <small><pre>{{specification}}</pre></small>\n      <h3>库存组合</h3>\n      <small><pre>{{skus}}</pre></small>\n      <h3>表格数据</h3>\n      <small><pre>{{data}}</pre></small>\n      <h3>合并表格行</h3>\n      <small><pre>{{spanCollection}}</pre></small>\n    </template>\n  </div>\n</template>\n\n<script>\nimport { uniq, cloneDeep, isEqual } from 'lodash'\n\nexport default {\n  props: {\n    spec: Array,\n    sku: Array,\n    // 测试\n    test: Boolean\n  },\n  data () {\n    return {\n      max: 3,\n      image: false,\n      checked: false,\n      // 规格集合\n      specification: this.spec,\n      // 库存集合\n      skus: this.sku,\n      // 缓存input规格值\n      attributeModelCache: [],\n      // 缓存input切换状态\n      visiableCache: [],\n      data: [],\n      spanCollection: [],\n      // 快捷设置\n      mode: '',\n      value: ''\n    }\n  },\n\n  computed: {\n    // 计算添加规格状态\n    enable () {\n      return this.specification.length < this.max\n    },\n\n    skusCombination () {\n      return this.skus.map(item => item.combination)\n    }\n  },\n\n  watch: {\n    spec () {\n      this.$emit('change-spec', this.spec)\n    },\n\n    skus () {\n      this.$emit('change-sku', this.skus)\n    }\n  },\n\n  methods: {\n    // 计算table 每行重复\n    computeRowspan () {\n      this.spanCollection = []\n      const rowspan = (name) => {\n        let span = []\n        let dot = 0\n\n        this.data.map((item, index) => {\n          if (index === 0) {\n            span.push(1)\n          } else {\n            if (item[name] === this.data[index - 1][name]) {\n              span[dot] += 1\n              span.push(0)\n            } else {\n              dot = index\n              span.push(1)\n            }\n          }\n        })\n\n        this.spanCollection.push(span)\n      }\n\n      this.specification.map(item => {\n        rowspan(item.name)\n      })\n    },\n    // 添加规格\n    handlePushSpecification () {\n      console.log(this.enable)\n      if (!this.enable) return\n\n      this.specification.push({\n        name: '',\n        attribute: []\n      })\n    },\n    // 删除规格\n    handleRemoveSpecification (indent) {\n      this.specification.splice(indent, 1)\n\n      this.handleChangeSpecification('del')\n    },\n    // 切换input状态\n    handleToggleInput (indent, status = true) {\n      this.$set(this.visiableCache, indent, status)\n\n      status && this.$nextTick(() => {\n        this.$refs[`input_${indent}`][0].focus()\n      })\n    },\n    // 重置input model\n    handleResetAttributeCache (indent) {\n      this.attributeModelCache[indent] = ''\n    },\n    // 添加规格值\n    handleAddAttribute (indent) {\n      let attributes = (this.attributeModelCache[indent] || '').trim()\n\n      if (attributes) {\n        // 空格分割\n        let tags = attributes.split(/\\s+/)\n\n        // 去重\n        tags = uniq(this.specification[indent].attribute.concat(tags))\n        // 更新indent所属attribute\n        this.$set(this.specification[indent], 'attribute', tags)\n\n        this.handleResetAttributeCache(indent)\n\n        this.handleChangeSpecification('add')\n      }\n\n      this.handleToggleInput(indent, false)\n    },\n    // 移除规格值\n    handleRemoveAttribute (indent, index) {\n      this.specification[indent].attribute.splice(index, 1)\n\n      this.handleChangeSpecification('del')\n    },\n    // 计算乘积\n    computedSkus (indent) {\n      let num = 1\n\n      this.specification.map((item, index) => {\n        if (index >= indent && item.attribute.length) {\n          num *= item.attribute.length\n        }\n      })\n      // console.log(num)\n      return num\n    },\n    // 监听规格值变化\n    handleChangeSpecification (action) {\n      // 深度拷贝库存集合\n      const deep = cloneDeep(this.skus)\n\n      if (action === 'del') {\n        this.skus = []\n      }\n\n      console.log(this.computedSkus(0))\n\n      for (let i = 0; i < this.computedSkus(0); i++) {\n        this.handleChangeStocks(action, i, deep)\n      }\n    },\n    // 生成库存数据集合\n    handleChangeStocks (action, index, deep) {\n      let sku = {\n        price: 0,\n        stock: 0,\n        marked_price: 0,\n        combination: this.getCombination(index)\n      }\n\n      const combination = sku.combination\n      if (action === 'add') {\n        // 查找是否已存在库存组合\n        if (this.skusCombination.findIndex(item => isEqual(combination, item)) === -1) {\n          this.$set(this.skus, index, sku)\n        }\n      } else if (action === 'del') {\n        // 删除库存\n        let collection = ''\n\n        deep.forEach(item => {\n          console.log(combination, item.combination, isEqual(combination, item.combination))\n          if (isEqual(combination, item.combination)) {\n            collection = item\n            return false\n          }\n        })\n        this.skus.push(collection || sku)\n      }\n\n      this.tableData()\n    },\n    tableData () {\n      this.data = []\n\n      this.skus.map((item, index) => {\n        this.data.push({\n          ...item,\n          ...item.combination\n        })\n      })\n\n      this.computeRowspan()\n      // console.log(data)\n      // return data\n    },\n    // 获取规格属性\n    handleGetSpecificationAttribute (indent, index) {\n      // return this.specification[indent].attribute[index]\n      // 获取当前规格项目下的属性值\n      const attributes = this.specification[indent].attribute\n      let _index\n\n      // 判断是否最后一个规格项目\n      if (this.specification[indent + 1] && this.specification[indent + 1].attribute.length) {\n        _index = index / this.computedSkus(indent + 1)\n      } else {\n        _index = index\n      }\n\n      const i = Math.floor(_index % attributes.length)\n\n      if (i.toString() !== 'NaN') {\n        return attributes[i]\n      } else {\n        return ''\n      }\n    },\n    // 组合\n    getCombination (index) {\n      let combination = {}\n\n      this.specification.map((item, indent) => {\n        combination[item.name] = this.handleGetSpecificationAttribute(indent, index)\n      })\n\n      return combination\n    },\n    // 设置rowspan\n    handleSpanMethod ({ row, column, rowIndex, columnIndex }) {\n      console.log(row, column, rowIndex, columnIndex)\n\n      for (let i = 0; i < this.specification.length; i++) {\n        if (columnIndex === i) {\n          if (this.spanCollection[i] && this.spanCollection[i][rowIndex]) {\n            return {\n              rowspan: this.spanCollection[i][rowIndex],\n              colspan: 1\n            }\n          } else {\n            return {\n              rowspan: 0,\n              colspan: 0\n            }\n          }\n        }\n      }\n\n      // if (columnIndex < this.specification.length) {\n      //   return {\n      //     rowspan: row.rowspan,\n      //     colspan: 1\n      //   }\n      // }\n\n      // return {\n      //   rowspan: 0,\n      //   colspan: 0\n      // }\n    },\n    // 判断是否显示当前行\n    computedShow (indent, index) {\n      // 如果当前项目下没有属性，则不显示\n      if (!this.specification[indent]) {\n        return false\n      // 自己悟一下吧\n      } else if (index % this.computedSkus(indent + 1) === 0) {\n        return true\n      } else {\n        return false\n      }\n    },\n\n    handleSettingSkus () {\n      if (this.value === '') return\n\n      this.skus.map(item => {\n        item[this.mode] = this.value\n      })\n    }\n  },\n\n  created () {\n    if (this.test) {\n      this.specification = [\n        {\n          name: '颜色',\n          attribute: [\n            '红色', '白色', '黑色'\n          ]\n        }\n      ]\n\n      this.skus = [\n        {\n          price: 0,\n          stock: 0,\n          marked_price: 0,\n          combination: {\n            '颜色': '红色'\n          }\n        },\n        {\n          price: 0,\n          stock: 0,\n          marked_price: 0,\n          combination: {\n            '颜色': '白色'\n          }\n        },\n        {\n          price: 0,\n          stock: 0,\n          marked_price: 0,\n          combination: {\n            '颜色': '黑色'\n          }\n        }\n      ]\n    }\n  },\n\n  mounted () {\n    this.tableData()\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.standard {\n  width: 100%;\n  box-sizing: border-box;\n  overflow: hidden;\n\n  .el-input__inner {\n    padding: 0 5px;\n  }\n\n  .inline-text {\n    font-size: 12px;\n  }\n\n  .inline-title {\n    width: 50px;\n    height: 28px;\n    line-height: 28px;\n  }\n\n  .inline-input {\n    width: 120px;\n  }\n\n  .standard-input {\n    margin-right: 10px;\n  }\n\n  .standard-panel {\n\n    &:hover {\n      .el-icon-error {\n        margin-right: 0;\n      }\n    }\n  }\n\n  .standard-head {\n    padding: 7px 10px;\n    background-color: #f8f8f8;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n\n    .el-icon-error {\n      margin-right: -50px;\n      cursor: pointer;\n      transition: all .3s;\n    }\n\n    .standard-group {\n      display: flex;\n      flex-flow: row nowrap;\n      align-items: center;\n    }\n\n    .el-checkbox.is-bordered {\n      border: 0;\n    }\n  }\n\n  .standard-lists {\n    padding: 10px 10px 0;\n    display: flex;\n    flex-flow: row wrap;\n    align-items: flex-start;\n    margin-bottom: 10px;\n  }\n\n  .standard-tools {\n    margin-top: 10px;\n    display: flex;\n    flex-flow: row nowrap;\n    align-items: center;\n\n    .inline-text {\n      margin-right: 10px\n    }\n\n    .el-input {\n      margin-left: 10px;\n      width: 150px;\n    }\n  }\n}\n</style>\n"]}]}