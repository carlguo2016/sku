{"remainingRequest":"/Users/ease/Work/node/vue-sku/node_modules/babel-loader/lib/index.js!/Users/ease/Work/node/vue-sku/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ease/Work/node/vue-sku/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ease/Work/node/vue-sku/src/components/specification/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ease/Work/node/vue-sku/src/components/specification/index.vue","mtime":1565317289495},{"path":"/Users/ease/Work/node/vue-sku/node_modules/cache-loader/dist/cjs.js","mtime":1564277481020},{"path":"/Users/ease/Work/node/vue-sku/node_modules/babel-loader/lib/index.js","mtime":1564277365216},{"path":"/Users/ease/Work/node/vue-sku/node_modules/cache-loader/dist/cjs.js","mtime":1564277481020},{"path":"/Users/ease/Work/node/vue-sku/node_modules/vue-loader/lib/index.js","mtime":1564277484030}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _defineProperty from \"/Users/ease/Work/node/vue-sku/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.function.name\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { uniq, cloneDeep, isEqual } from 'lodash';\nexport default {\n  props: {\n    spec: Array,\n    sku: Array,\n    // 测试\n    test: Boolean\n  },\n  data: function data() {\n    return {\n      max: 3,\n      image: false,\n      checked: false,\n      // 规格集合\n      specification: this.spec,\n      // 库存集合\n      skus: this.sku,\n      // 缓存input规格值\n      attributeModelCache: [],\n      // 缓存input切换状态\n      visiableCache: [],\n      data: [],\n      spanCollection: [],\n      // 快捷设置\n      mode: '',\n      value: ''\n    };\n  },\n  computed: {\n    // 计算添加规格状态\n    enable: function enable() {\n      return this.specification.length < this.max;\n    },\n    skusCombination: function skusCombination() {\n      return this.skus.map(function (item) {\n        return item.combination;\n      });\n    }\n  },\n  watch: {\n    spec: function spec() {\n      this.$emit('change-spec', this.spec);\n    },\n    skus: function skus() {\n      this.$emit('change-sku', this.skus);\n    }\n  },\n  methods: {\n    // 计算table 每行重复\n    computeRowspan: function computeRowspan() {\n      var _this = this;\n\n      this.spanCollection = [];\n\n      var rowspan = function rowspan(name) {\n        var span = [];\n        var dot = 0;\n\n        _this.data.map(function (item, index) {\n          if (index === 0) {\n            span.push(1);\n          } else {\n            if (item[name] === _this.data[index - 1][name]) {\n              span[dot] += 1;\n              span.push(0);\n            } else {\n              dot = index;\n              span.push(1);\n            }\n          }\n        });\n\n        _this.spanCollection.push(span);\n      };\n\n      this.specification.map(function (item) {\n        rowspan(item.name);\n      });\n    },\n    // 添加规格\n    handlePushSpecification: function handlePushSpecification() {\n      console.log(this.enable);\n      if (!this.enable) return;\n      this.specification.push({\n        name: '',\n        attribute: []\n      });\n    },\n    // 删除规格\n    handleRemoveSpecification: function handleRemoveSpecification(indent) {\n      this.specification.splice(indent, 1);\n      this.handleChangeSpecification('del');\n    },\n    // 切换input状态\n    handleToggleInput: function handleToggleInput(indent) {\n      var _this2 = this;\n\n      var status = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      this.$set(this.visiableCache, indent, status);\n      status && this.$nextTick(function () {\n        _this2.$refs[\"input_\".concat(indent)][0].focus();\n      });\n    },\n    // 重置input model\n    handleResetAttributeCache: function handleResetAttributeCache(indent) {\n      this.attributeModelCache[indent] = '';\n    },\n    // 添加规格值\n    handleAddAttribute: function handleAddAttribute(indent) {\n      var attributes = (this.attributeModelCache[indent] || '').trim();\n\n      if (attributes) {\n        // 空格分割\n        var tags = attributes.split(/\\s+/); // 去重\n\n        tags = uniq(this.specification[indent].attribute.concat(tags)); // 更新indent所属attribute\n\n        this.$set(this.specification[indent], 'attribute', tags);\n        this.handleResetAttributeCache(indent);\n        this.handleChangeSpecification('add');\n      }\n\n      this.handleToggleInput(indent, false);\n    },\n    // 移除规格值\n    handleRemoveAttribute: function handleRemoveAttribute(indent, index) {\n      this.specification[indent].attribute.splice(index, 1);\n      this.handleChangeSpecification('del');\n    },\n    // 计算乘积\n    computedSkus: function computedSkus(indent) {\n      var num = 1;\n      this.specification.map(function (item, index) {\n        if (index >= indent && item.attribute.length) {\n          num *= item.attribute.length;\n        }\n      }); // console.log(num)\n\n      return num;\n    },\n    // 监听规格值变化\n    handleChangeSpecification: function handleChangeSpecification(action) {\n      // 深度拷贝库存集合\n      var deep = cloneDeep(this.skus);\n\n      if (action === 'del') {\n        this.skus = [];\n      }\n\n      console.log(this.computedSkus(0));\n\n      for (var i = 0; i < this.computedSkus(0); i++) {\n        this.handleChangeStocks(action, i, deep);\n      }\n    },\n    // 生成库存数据集合\n    handleChangeStocks: function handleChangeStocks(action, index, deep) {\n      var sku = {\n        price: 0,\n        stock: 0,\n        marked_price: 0,\n        combination: this.getCombination(index)\n      };\n      var combination = sku.combination;\n\n      if (action === 'add') {\n        // 查找是否已存在库存组合\n        if (this.skusCombination.findIndex(function (item) {\n          return isEqual(combination, item);\n        }) === -1) {\n          this.$set(this.skus, index, sku);\n        }\n      } else if (action === 'del') {\n        // 删除库存\n        var collection = '';\n        deep.forEach(function (item) {\n          console.log(combination, item.combination, isEqual(combination, item.combination));\n\n          if (isEqual(combination, item.combination)) {\n            collection = item;\n            return false;\n          }\n        });\n        this.skus.push(collection || sku);\n      }\n\n      this.tableData();\n    },\n    tableData: function tableData() {\n      var _this3 = this;\n\n      this.data = [];\n      this.skus.map(function (item, index) {\n        _this3.data.push(_objectSpread({}, item, {}, item.combination));\n      });\n      this.computeRowspan(); // console.log(data)\n      // return data\n    },\n    // 获取规格属性\n    handleGetSpecificationAttribute: function handleGetSpecificationAttribute(indent, index) {\n      // return this.specification[indent].attribute[index]\n      // 获取当前规格项目下的属性值\n      var attributes = this.specification[indent].attribute;\n\n      var _index; // 判断是否最后一个规格项目\n\n\n      if (this.specification[indent + 1] && this.specification[indent + 1].attribute.length) {\n        _index = index / this.computedSkus(indent + 1);\n      } else {\n        _index = index;\n      }\n\n      var i = Math.floor(_index % attributes.length);\n\n      if (i.toString() !== 'NaN') {\n        return attributes[i];\n      } else {\n        return '';\n      }\n    },\n    // 组合\n    getCombination: function getCombination(index) {\n      var _this4 = this;\n\n      var combination = {};\n      this.specification.map(function (item, indent) {\n        combination[item.name] = _this4.handleGetSpecificationAttribute(indent, index);\n      });\n      return combination;\n    },\n    // 设置rowspan\n    handleSpanMethod: function handleSpanMethod(_ref) {\n      var row = _ref.row,\n          column = _ref.column,\n          rowIndex = _ref.rowIndex,\n          columnIndex = _ref.columnIndex;\n      console.log(row, column, rowIndex, columnIndex);\n\n      for (var i = 0; i < this.specification.length; i++) {\n        if (columnIndex === i) {\n          if (this.spanCollection[i] && this.spanCollection[i][rowIndex]) {\n            return {\n              rowspan: this.spanCollection[i][rowIndex],\n              colspan: 1\n            };\n          } else {\n            return {\n              rowspan: 0,\n              colspan: 0\n            };\n          }\n        }\n      } // if (columnIndex < this.specification.length) {\n      //   return {\n      //     rowspan: row.rowspan,\n      //     colspan: 1\n      //   }\n      // }\n      // return {\n      //   rowspan: 0,\n      //   colspan: 0\n      // }\n\n    },\n    // 判断是否显示当前行\n    computedShow: function computedShow(indent, index) {\n      // 如果当前项目下没有属性，则不显示\n      if (!this.specification[indent]) {\n        return false; // 自己悟一下吧\n      } else if (index % this.computedSkus(indent + 1) === 0) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    handleSettingSkus: function handleSettingSkus() {\n      var _this5 = this;\n\n      if (this.value === '') return;\n      this.skus.map(function (item) {\n        item[_this5.mode] = _this5.value;\n      });\n    }\n  },\n  created: function created() {\n    if (this.test) {\n      this.specification = [{\n        name: '颜色',\n        attribute: ['红色', '白色', '黑色']\n      }];\n      this.skus = [{\n        price: 0,\n        stock: 0,\n        marked_price: 0,\n        combination: {\n          '颜色': '红色'\n        }\n      }, {\n        price: 0,\n        stock: 0,\n        marked_price: 0,\n        combination: {\n          '颜色': '白色'\n        }\n      }, {\n        price: 0,\n        stock: 0,\n        marked_price: 0,\n        combination: {\n          '颜色': '黑色'\n        }\n      }];\n    }\n  },\n  mounted: function mounted() {\n    this.tableData();\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"standard\">\n    <div class=\"standard-container\">\n      <div class=\"standard-panel\" v-for=\"(spec, indent) in specification\" :key=\"indent\">\n        <div class=\"standard-head\">\n          <div class=\"standard-group\">\n            <div class=\"inline-text inline-title\">规格名:</div>\n            <el-input v-model=\"spec.name\" @blur=\"handleChangeSpecification('add')\" size=\"mini\" class=\"inline-input\" />\n            <el-checkbox v-if=\"image && indent === 0\" v-model=\"checked\" label=\"规格图片\" border size=\"mini\"></el-checkbox>\n          </div>\n          <i class=\"el-icon-error\" @click=\"handleRemoveSpecification(indent)\"></i>\n        </div>\n        <div class=\"standard-lists\">\n          <div class=\"standard-value inline-text inline-title\">规格值:</div>\n            <div class=\"standard-value standard-input\" v-for=\"(tag, index) in spec.attribute\" :key=\"index\">\n              <el-tag size=\"medium\" closable @close=\"handleRemoveAttribute(indent, index)\">{{ tag }}</el-tag>\n            </div>\n            <div v-if=\"visiableCache[indent]\" class=\"standard-input\" style=\"width: 92px; margin: 0;\">\n              <el-input\n                :ref=\"`input_${indent}`\"\n                v-model=\"attributeModelCache[indent]\"\n                size=\"mini\"\n                @keyup.enter.native=\"handleAddAttribute(indent)\"\n                @blur=\"handleAddAttribute(indent)\"\n              />\n            </div>\n            <el-button v-else size=\"mini\" @click=\"handleToggleInput(indent)\">添加规格值</el-button>\n        </div>\n      </div>\n      <el-tooltip v-if=\"!enable\" :content=\"`最多支持${max}条规格`\" class=\"item\" effect=\"dark\" placement=\"top\">\n        <el-button type=\"info\" class=\"standard-btn\" size=\"mini\" plain>添加规格</el-button>\n      </el-tooltip>\n      <el-button v-else type=\"primary\" class=\"standard-btn\" size=\"mini\" plain @click=\"handlePushSpecification\">添加规格</el-button>\n    </div>\n    <template v-if=\"skus.length\">\n      <el-table style=\"margin-top: 10px\" border :data=\"data\" :span-method=\"handleSpanMethod\">\n        <el-table-column\n          v-for=\"(item, indent) in specification\"\n          :key=\"indent\"\n          :prop=\"item.name\"\n          :label=\"item.name\">\n        </el-table-column>\n        <el-table-column\n          prop=\"price\"\n          label=\"价格\"\n          width=\"120\">\n          <template slot-scope=\"scope\">\n            <el-input size=\"mini\" v-model=\"skus[scope.$index].price\" />\n          </template>\n        </el-table-column>\n        <el-table-column\n          prop=\"marked_price\"\n          label=\"市场价\"\n          width=\"120\">\n          <template slot-scope=\"scope\">\n            <el-input size=\"mini\" v-model=\"skus[scope.$index].marked_price\" />\n          </template>\n        </el-table-column>\n        <el-table-column\n          prop=\"stock\"\n          label=\"库存\"\n          width=\"120\">\n          <template slot-scope=\"scope\">\n            <el-input size=\"mini\" v-model=\"skus[scope.$index].stock\" />\n          </template>\n        </el-table-column>\n      </el-table>\n      <div class=\"standard-tools\">\n        <span class=\"inline-text\">批量设置</span>\n        <el-radio-group v-model=\"mode\" size=\"mini\">\n          <el-radio-button label=\"price\">价格</el-radio-button>\n          <el-radio-button label=\"marked_price\">市场价</el-radio-button>\n          <el-radio-button label=\"stock\">库存</el-radio-button>\n        </el-radio-group>\n        <el-input v-if=\"mode\" v-model=\"value\"><el-button type=\"primary\" slot=\"append\" icon=\"el-icon-setting\" @click=\"handleSettingSkus\"></el-button></el-input>\n      </div>\n    </template>\n    <template v-if=\"test\">\n      <h3>规格</h3>\n      <small><pre>{{specification}}</pre></small>\n      <h3>库存组合</h3>\n      <small><pre>{{skus}}</pre></small>\n      <h3>表格数据</h3>\n      <small><pre>{{data}}</pre></small>\n      <h3>合并表格行</h3>\n      <small><pre>{{spanCollection}}</pre></small>\n    </template>\n  </div>\n</template>\n\n<script>\nimport { uniq, cloneDeep, isEqual } from 'lodash'\n\nexport default {\n  props: {\n    spec: Array,\n    sku: Array,\n    // 测试\n    test: Boolean\n  },\n  data () {\n    return {\n      max: 3,\n      image: false,\n      checked: false,\n      // 规格集合\n      specification: this.spec,\n      // 库存集合\n      skus: this.sku,\n      // 缓存input规格值\n      attributeModelCache: [],\n      // 缓存input切换状态\n      visiableCache: [],\n      data: [],\n      spanCollection: [],\n      // 快捷设置\n      mode: '',\n      value: ''\n    }\n  },\n\n  computed: {\n    // 计算添加规格状态\n    enable () {\n      return this.specification.length < this.max\n    },\n\n    skusCombination () {\n      return this.skus.map(item => item.combination)\n    }\n  },\n\n  watch: {\n    spec () {\n      this.$emit('change-spec', this.spec)\n    },\n\n    skus () {\n      this.$emit('change-sku', this.skus)\n    }\n  },\n\n  methods: {\n    // 计算table 每行重复\n    computeRowspan () {\n      this.spanCollection = []\n      const rowspan = (name) => {\n        let span = []\n        let dot = 0\n\n        this.data.map((item, index) => {\n          if (index === 0) {\n            span.push(1)\n          } else {\n            if (item[name] === this.data[index - 1][name]) {\n              span[dot] += 1\n              span.push(0)\n            } else {\n              dot = index\n              span.push(1)\n            }\n          }\n        })\n\n        this.spanCollection.push(span)\n      }\n\n      this.specification.map(item => {\n        rowspan(item.name)\n      })\n    },\n    // 添加规格\n    handlePushSpecification () {\n      console.log(this.enable)\n      if (!this.enable) return\n\n      this.specification.push({\n        name: '',\n        attribute: []\n      })\n    },\n    // 删除规格\n    handleRemoveSpecification (indent) {\n      this.specification.splice(indent, 1)\n\n      this.handleChangeSpecification('del')\n    },\n    // 切换input状态\n    handleToggleInput (indent, status = true) {\n      this.$set(this.visiableCache, indent, status)\n\n      status && this.$nextTick(() => {\n        this.$refs[`input_${indent}`][0].focus()\n      })\n    },\n    // 重置input model\n    handleResetAttributeCache (indent) {\n      this.attributeModelCache[indent] = ''\n    },\n    // 添加规格值\n    handleAddAttribute (indent) {\n      let attributes = (this.attributeModelCache[indent] || '').trim()\n\n      if (attributes) {\n        // 空格分割\n        let tags = attributes.split(/\\s+/)\n\n        // 去重\n        tags = uniq(this.specification[indent].attribute.concat(tags))\n        // 更新indent所属attribute\n        this.$set(this.specification[indent], 'attribute', tags)\n\n        this.handleResetAttributeCache(indent)\n\n        this.handleChangeSpecification('add')\n      }\n\n      this.handleToggleInput(indent, false)\n    },\n    // 移除规格值\n    handleRemoveAttribute (indent, index) {\n      this.specification[indent].attribute.splice(index, 1)\n\n      this.handleChangeSpecification('del')\n    },\n    // 计算乘积\n    computedSkus (indent) {\n      let num = 1\n\n      this.specification.map((item, index) => {\n        if (index >= indent && item.attribute.length) {\n          num *= item.attribute.length\n        }\n      })\n      // console.log(num)\n      return num\n    },\n    // 监听规格值变化\n    handleChangeSpecification (action) {\n      // 深度拷贝库存集合\n      const deep = cloneDeep(this.skus)\n\n      if (action === 'del') {\n        this.skus = []\n      }\n\n      console.log(this.computedSkus(0))\n\n      for (let i = 0; i < this.computedSkus(0); i++) {\n        this.handleChangeStocks(action, i, deep)\n      }\n    },\n    // 生成库存数据集合\n    handleChangeStocks (action, index, deep) {\n      let sku = {\n        price: 0,\n        stock: 0,\n        marked_price: 0,\n        combination: this.getCombination(index)\n      }\n\n      const combination = sku.combination\n      if (action === 'add') {\n        // 查找是否已存在库存组合\n        if (this.skusCombination.findIndex(item => isEqual(combination, item)) === -1) {\n          this.$set(this.skus, index, sku)\n        }\n      } else if (action === 'del') {\n        // 删除库存\n        let collection = ''\n\n        deep.forEach(item => {\n          console.log(combination, item.combination, isEqual(combination, item.combination))\n          if (isEqual(combination, item.combination)) {\n            collection = item\n            return false\n          }\n        })\n        this.skus.push(collection || sku)\n      }\n\n      this.tableData()\n    },\n    tableData () {\n      this.data = []\n\n      this.skus.map((item, index) => {\n        this.data.push({\n          ...item,\n          ...item.combination\n        })\n      })\n\n      this.computeRowspan()\n      // console.log(data)\n      // return data\n    },\n    // 获取规格属性\n    handleGetSpecificationAttribute (indent, index) {\n      // return this.specification[indent].attribute[index]\n      // 获取当前规格项目下的属性值\n      const attributes = this.specification[indent].attribute\n      let _index\n\n      // 判断是否最后一个规格项目\n      if (this.specification[indent + 1] && this.specification[indent + 1].attribute.length) {\n        _index = index / this.computedSkus(indent + 1)\n      } else {\n        _index = index\n      }\n\n      const i = Math.floor(_index % attributes.length)\n\n      if (i.toString() !== 'NaN') {\n        return attributes[i]\n      } else {\n        return ''\n      }\n    },\n    // 组合\n    getCombination (index) {\n      let combination = {}\n\n      this.specification.map((item, indent) => {\n        combination[item.name] = this.handleGetSpecificationAttribute(indent, index)\n      })\n\n      return combination\n    },\n    // 设置rowspan\n    handleSpanMethod ({ row, column, rowIndex, columnIndex }) {\n      console.log(row, column, rowIndex, columnIndex)\n\n      for (let i = 0; i < this.specification.length; i++) {\n        if (columnIndex === i) {\n          if (this.spanCollection[i] && this.spanCollection[i][rowIndex]) {\n            return {\n              rowspan: this.spanCollection[i][rowIndex],\n              colspan: 1\n            }\n          } else {\n            return {\n              rowspan: 0,\n              colspan: 0\n            }\n          }\n        }\n      }\n\n      // if (columnIndex < this.specification.length) {\n      //   return {\n      //     rowspan: row.rowspan,\n      //     colspan: 1\n      //   }\n      // }\n\n      // return {\n      //   rowspan: 0,\n      //   colspan: 0\n      // }\n    },\n    // 判断是否显示当前行\n    computedShow (indent, index) {\n      // 如果当前项目下没有属性，则不显示\n      if (!this.specification[indent]) {\n        return false\n      // 自己悟一下吧\n      } else if (index % this.computedSkus(indent + 1) === 0) {\n        return true\n      } else {\n        return false\n      }\n    },\n\n    handleSettingSkus () {\n      if (this.value === '') return\n\n      this.skus.map(item => {\n        item[this.mode] = this.value\n      })\n    }\n  },\n\n  created () {\n    if (this.test) {\n      this.specification = [\n        {\n          name: '颜色',\n          attribute: [\n            '红色', '白色', '黑色'\n          ]\n        }\n      ]\n\n      this.skus = [\n        {\n          price: 0,\n          stock: 0,\n          marked_price: 0,\n          combination: {\n            '颜色': '红色'\n          }\n        },\n        {\n          price: 0,\n          stock: 0,\n          marked_price: 0,\n          combination: {\n            '颜色': '白色'\n          }\n        },\n        {\n          price: 0,\n          stock: 0,\n          marked_price: 0,\n          combination: {\n            '颜色': '黑色'\n          }\n        }\n      ]\n    }\n  },\n\n  mounted () {\n    this.tableData()\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.standard {\n  width: 100%;\n  box-sizing: border-box;\n  overflow: hidden;\n\n  .el-input__inner {\n    padding: 0 5px;\n  }\n\n  .inline-text {\n    font-size: 12px;\n  }\n\n  .inline-title {\n    width: 50px;\n    height: 28px;\n    line-height: 28px;\n  }\n\n  .inline-input {\n    width: 120px;\n  }\n\n  .standard-input {\n    margin-right: 10px;\n  }\n\n  .standard-panel {\n\n    &:hover {\n      .el-icon-error {\n        margin-right: 0;\n      }\n    }\n  }\n\n  .standard-head {\n    padding: 7px 10px;\n    background-color: #f8f8f8;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n\n    .el-icon-error {\n      margin-right: -50px;\n      cursor: pointer;\n      transition: all .3s;\n    }\n\n    .standard-group {\n      display: flex;\n      flex-flow: row nowrap;\n      align-items: center;\n    }\n\n    .el-checkbox.is-bordered {\n      border: 0;\n    }\n  }\n\n  .standard-lists {\n    padding: 10px 10px 0;\n    display: flex;\n    flex-flow: row wrap;\n    align-items: flex-start;\n    margin-bottom: 10px;\n  }\n\n  .standard-tools {\n    margin-top: 10px;\n    display: flex;\n    flex-flow: row nowrap;\n    align-items: center;\n\n    .inline-text {\n      margin-right: 10px\n    }\n\n    .el-input {\n      margin-left: 10px;\n      width: 150px;\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/components/specification"}]}